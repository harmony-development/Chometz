// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync/v1/sync.proto

#include "sync/v1/sync.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_sync_2fv1_2fsync_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Event_sync_2fv1_2fsync_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sync_2fv1_2fsync_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sync_2fv1_2fsync_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto;
namespace protocol {
namespace sync {
namespace v1 {
class AuthDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthData> _instance;
} _AuthData_default_instance_;
class EventQueueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventQueue> _instance;
} _EventQueue_default_instance_;
class Event_UserRemovedFromGuildDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event_UserRemovedFromGuild> _instance;
} _Event_UserRemovedFromGuild_default_instance_;
class Event_UserAddedToGuildDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event_UserAddedToGuild> _instance;
} _Event_UserAddedToGuild_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Event> _instance;
  const ::protocol::sync::v1::Event_UserRemovedFromGuild* user_removed_from_guild_;
  const ::protocol::sync::v1::Event_UserAddedToGuild* user_added_to_guild_;
} _Event_default_instance_;
}  // namespace v1
}  // namespace sync
}  // namespace protocol
static void InitDefaultsscc_info_AuthData_sync_2fv1_2fsync_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::sync::v1::_AuthData_default_instance_;
    new (ptr) ::protocol::sync::v1::AuthData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::sync::v1::AuthData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthData_sync_2fv1_2fsync_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthData_sync_2fv1_2fsync_2eproto}, {}};

static void InitDefaultsscc_info_Event_sync_2fv1_2fsync_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::sync::v1::_Event_default_instance_;
    new (ptr) ::protocol::sync::v1::Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::sync::v1::Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Event_sync_2fv1_2fsync_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Event_sync_2fv1_2fsync_2eproto}, {
      &scc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto.base,
      &scc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto.base,}};

static void InitDefaultsscc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::sync::v1::_Event_UserAddedToGuild_default_instance_;
    new (ptr) ::protocol::sync::v1::Event_UserAddedToGuild();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::sync::v1::Event_UserAddedToGuild::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto}, {}};

static void InitDefaultsscc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::sync::v1::_Event_UserRemovedFromGuild_default_instance_;
    new (ptr) ::protocol::sync::v1::Event_UserRemovedFromGuild();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::sync::v1::Event_UserRemovedFromGuild::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto}, {}};

static void InitDefaultsscc_info_EventQueue_sync_2fv1_2fsync_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::sync::v1::_EventQueue_default_instance_;
    new (ptr) ::protocol::sync::v1::EventQueue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::sync::v1::EventQueue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventQueue_sync_2fv1_2fsync_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EventQueue_sync_2fv1_2fsync_2eproto}, {
      &scc_info_Event_sync_2fv1_2fsync_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sync_2fv1_2fsync_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sync_2fv1_2fsync_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sync_2fv1_2fsync_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sync_2fv1_2fsync_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::AuthData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::AuthData, host_),
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::AuthData, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::EventQueue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::EventQueue, events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserRemovedFromGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserRemovedFromGuild, user_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserRemovedFromGuild, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserAddedToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserAddedToGuild, user_id_),
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event_UserAddedToGuild, guild_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::protocol::sync::v1::EventDefaultTypeInternal, user_removed_from_guild_),
  offsetof(::protocol::sync::v1::EventDefaultTypeInternal, user_added_to_guild_),
  PROTOBUF_FIELD_OFFSET(::protocol::sync::v1::Event, kind_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::sync::v1::AuthData)},
  { 7, -1, sizeof(::protocol::sync::v1::EventQueue)},
  { 13, -1, sizeof(::protocol::sync::v1::Event_UserRemovedFromGuild)},
  { 20, -1, sizeof(::protocol::sync::v1::Event_UserAddedToGuild)},
  { 27, -1, sizeof(::protocol::sync::v1::Event)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::sync::v1::_AuthData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::sync::v1::_EventQueue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::sync::v1::_Event_UserRemovedFromGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::sync::v1::_Event_UserAddedToGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protocol::sync::v1::_Event_default_instance_),
};

const char descriptor_table_protodef_sync_2fv1_2fsync_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022sync/v1/sync.proto\022\020protocol.sync.v1\032\033"
  "google/protobuf/empty.proto\032\033harmonytype"
  "s/v1/types.proto\"&\n\010AuthData\022\014\n\004host\030\001 \001"
  "(\t\022\014\n\004time\030\002 \001(\004\"5\n\nEventQueue\022\'\n\006events"
  "\030\001 \003(\0132\027.protocol.sync.v1.Event\"\233\002\n\005Even"
  "t\022O\n\027user_removed_from_guild\030\001 \001(\0132,.pro"
  "tocol.sync.v1.Event.UserRemovedFromGuild"
  "H\000\022G\n\023user_added_to_guild\030\002 \001(\0132(.protoc"
  "ol.sync.v1.Event.UserAddedToGuildH\000\0329\n\024U"
  "serRemovedFromGuild\022\017\n\007user_id\030\001 \001(\004\022\020\n\010"
  "guild_id\030\002 \001(\004\0325\n\020UserAddedToGuild\022\017\n\007us"
  "er_id\030\001 \001(\004\022\020\n\010guild_id\030\002 \001(\004B\006\n\004kind2\213\001"
  "\n\016PostboxService\022>\n\004Pull\022\026.google.protob"
  "uf.Empty\032\034.protocol.sync.v1.EventQueue\"\000"
  "\0229\n\004Push\022\027.protocol.sync.v1.Event\032\026.goog"
  "le.protobuf.Empty\"\000B3Z1github.com/harmon"
  "y-development/legato/gen/sync/v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sync_2fv1_2fsync_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_harmonytypes_2fv1_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sync_2fv1_2fsync_2eproto_sccs[5] = {
  &scc_info_AuthData_sync_2fv1_2fsync_2eproto.base,
  &scc_info_Event_sync_2fv1_2fsync_2eproto.base,
  &scc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto.base,
  &scc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto.base,
  &scc_info_EventQueue_sync_2fv1_2fsync_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sync_2fv1_2fsync_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sync_2fv1_2fsync_2eproto = {
  false, false, descriptor_table_protodef_sync_2fv1_2fsync_2eproto, "sync/v1/sync.proto", 680,
  &descriptor_table_sync_2fv1_2fsync_2eproto_once, descriptor_table_sync_2fv1_2fsync_2eproto_sccs, descriptor_table_sync_2fv1_2fsync_2eproto_deps, 5, 2,
  schemas, file_default_instances, TableStruct_sync_2fv1_2fsync_2eproto::offsets,
  file_level_metadata_sync_2fv1_2fsync_2eproto, 5, file_level_enum_descriptors_sync_2fv1_2fsync_2eproto, file_level_service_descriptors_sync_2fv1_2fsync_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sync_2fv1_2fsync_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sync_2fv1_2fsync_2eproto)), true);
namespace protocol {
namespace sync {
namespace v1 {

// ===================================================================

void AuthData::InitAsDefaultInstance() {
}
class AuthData::_Internal {
 public:
};

AuthData::AuthData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.sync.v1.AuthData)
}
AuthData::AuthData(const AuthData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:protocol.sync.v1.AuthData)
}

void AuthData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthData_sync_2fv1_2fsync_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_ = PROTOBUF_ULONGLONG(0);
}

AuthData::~AuthData() {
  // @@protoc_insertion_point(destructor:protocol.sync.v1.AuthData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthData::ArenaDtor(void* object) {
  AuthData* _this = reinterpret_cast< AuthData* >(object);
  (void)_this;
}
void AuthData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthData& AuthData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthData_sync_2fv1_2fsync_2eproto.base);
  return *internal_default_instance();
}


void AuthData::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.sync.v1.AuthData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  time_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protocol.sync.v1.AuthData.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.sync.v1.AuthData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.sync.v1.AuthData.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.sync.v1.AuthData)
  return target;
}

size_t AuthData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.sync.v1.AuthData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.sync.v1.AuthData)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.sync.v1.AuthData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.sync.v1.AuthData)
    MergeFrom(*source);
  }
}

void AuthData::MergeFrom(const AuthData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.sync.v1.AuthData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void AuthData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.sync.v1.AuthData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthData::CopyFrom(const AuthData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.sync.v1.AuthData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthData::IsInitialized() const {
  return true;
}

void AuthData::InternalSwap(AuthData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EventQueue::InitAsDefaultInstance() {
}
class EventQueue::_Internal {
 public:
};

EventQueue::EventQueue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  events_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.sync.v1.EventQueue)
}
EventQueue::EventQueue(const EventQueue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      events_(from.events_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.sync.v1.EventQueue)
}

void EventQueue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventQueue_sync_2fv1_2fsync_2eproto.base);
}

EventQueue::~EventQueue() {
  // @@protoc_insertion_point(destructor:protocol.sync.v1.EventQueue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventQueue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EventQueue::ArenaDtor(void* object) {
  EventQueue* _this = reinterpret_cast< EventQueue* >(object);
  (void)_this;
}
void EventQueue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventQueue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventQueue& EventQueue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventQueue_sync_2fv1_2fsync_2eproto.base);
  return *internal_default_instance();
}


void EventQueue::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.sync.v1.EventQueue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventQueue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protocol.sync.v1.Event events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventQueue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.sync.v1.EventQueue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.sync.v1.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_events_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_events(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.sync.v1.EventQueue)
  return target;
}

size_t EventQueue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.sync.v1.EventQueue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.sync.v1.Event events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventQueue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.sync.v1.EventQueue)
  GOOGLE_DCHECK_NE(&from, this);
  const EventQueue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventQueue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.sync.v1.EventQueue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.sync.v1.EventQueue)
    MergeFrom(*source);
  }
}

void EventQueue::MergeFrom(const EventQueue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.sync.v1.EventQueue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void EventQueue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.sync.v1.EventQueue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventQueue::CopyFrom(const EventQueue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.sync.v1.EventQueue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventQueue::IsInitialized() const {
  return true;
}

void EventQueue::InternalSwap(EventQueue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  events_.InternalSwap(&other->events_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventQueue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Event_UserRemovedFromGuild::InitAsDefaultInstance() {
}
class Event_UserRemovedFromGuild::_Internal {
 public:
};

Event_UserRemovedFromGuild::Event_UserRemovedFromGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.sync.v1.Event.UserRemovedFromGuild)
}
Event_UserRemovedFromGuild::Event_UserRemovedFromGuild(const Event_UserRemovedFromGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.sync.v1.Event.UserRemovedFromGuild)
}

void Event_UserRemovedFromGuild::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
}

Event_UserRemovedFromGuild::~Event_UserRemovedFromGuild() {
  // @@protoc_insertion_point(destructor:protocol.sync.v1.Event.UserRemovedFromGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Event_UserRemovedFromGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Event_UserRemovedFromGuild::ArenaDtor(void* object) {
  Event_UserRemovedFromGuild* _this = reinterpret_cast< Event_UserRemovedFromGuild* >(object);
  (void)_this;
}
void Event_UserRemovedFromGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Event_UserRemovedFromGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event_UserRemovedFromGuild& Event_UserRemovedFromGuild::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Event_UserRemovedFromGuild_sync_2fv1_2fsync_2eproto.base);
  return *internal_default_instance();
}


void Event_UserRemovedFromGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Event_UserRemovedFromGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Event_UserRemovedFromGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_user_id(), target);
  }

  // uint64 guild_id = 2;
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.sync.v1.Event.UserRemovedFromGuild)
  return target;
}

size_t Event_UserRemovedFromGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_user_id());
  }

  // uint64 guild_id = 2;
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event_UserRemovedFromGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const Event_UserRemovedFromGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Event_UserRemovedFromGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.sync.v1.Event.UserRemovedFromGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.sync.v1.Event.UserRemovedFromGuild)
    MergeFrom(*source);
  }
}

void Event_UserRemovedFromGuild::MergeFrom(const Event_UserRemovedFromGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void Event_UserRemovedFromGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event_UserRemovedFromGuild::CopyFrom(const Event_UserRemovedFromGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.sync.v1.Event.UserRemovedFromGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event_UserRemovedFromGuild::IsInitialized() const {
  return true;
}

void Event_UserRemovedFromGuild::InternalSwap(Event_UserRemovedFromGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event_UserRemovedFromGuild, guild_id_)
      + sizeof(Event_UserRemovedFromGuild::guild_id_)
      - PROTOBUF_FIELD_OFFSET(Event_UserRemovedFromGuild, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Event_UserRemovedFromGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Event_UserAddedToGuild::InitAsDefaultInstance() {
}
class Event_UserAddedToGuild::_Internal {
 public:
};

Event_UserAddedToGuild::Event_UserAddedToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.sync.v1.Event.UserAddedToGuild)
}
Event_UserAddedToGuild::Event_UserAddedToGuild(const Event_UserAddedToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.sync.v1.Event.UserAddedToGuild)
}

void Event_UserAddedToGuild::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
}

Event_UserAddedToGuild::~Event_UserAddedToGuild() {
  // @@protoc_insertion_point(destructor:protocol.sync.v1.Event.UserAddedToGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Event_UserAddedToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Event_UserAddedToGuild::ArenaDtor(void* object) {
  Event_UserAddedToGuild* _this = reinterpret_cast< Event_UserAddedToGuild* >(object);
  (void)_this;
}
void Event_UserAddedToGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Event_UserAddedToGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event_UserAddedToGuild& Event_UserAddedToGuild::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Event_UserAddedToGuild_sync_2fv1_2fsync_2eproto.base);
  return *internal_default_instance();
}


void Event_UserAddedToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.sync.v1.Event.UserAddedToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(guild_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Event_UserAddedToGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Event_UserAddedToGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.sync.v1.Event.UserAddedToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_user_id(), target);
  }

  // uint64 guild_id = 2;
  if (this->guild_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.sync.v1.Event.UserAddedToGuild)
  return target;
}

size_t Event_UserAddedToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.sync.v1.Event.UserAddedToGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_user_id());
  }

  // uint64 guild_id = 2;
  if (this->guild_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event_UserAddedToGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.sync.v1.Event.UserAddedToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const Event_UserAddedToGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Event_UserAddedToGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.sync.v1.Event.UserAddedToGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.sync.v1.Event.UserAddedToGuild)
    MergeFrom(*source);
  }
}

void Event_UserAddedToGuild::MergeFrom(const Event_UserAddedToGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.sync.v1.Event.UserAddedToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from.guild_id() != 0) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void Event_UserAddedToGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.sync.v1.Event.UserAddedToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event_UserAddedToGuild::CopyFrom(const Event_UserAddedToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.sync.v1.Event.UserAddedToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event_UserAddedToGuild::IsInitialized() const {
  return true;
}

void Event_UserAddedToGuild::InternalSwap(Event_UserAddedToGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event_UserAddedToGuild, guild_id_)
      + sizeof(Event_UserAddedToGuild::guild_id_)
      - PROTOBUF_FIELD_OFFSET(Event_UserAddedToGuild, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Event_UserAddedToGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::protocol::sync::v1::_Event_default_instance_.user_removed_from_guild_ = const_cast< ::protocol::sync::v1::Event_UserRemovedFromGuild*>(
      ::protocol::sync::v1::Event_UserRemovedFromGuild::internal_default_instance());
  ::protocol::sync::v1::_Event_default_instance_.user_added_to_guild_ = const_cast< ::protocol::sync::v1::Event_UserAddedToGuild*>(
      ::protocol::sync::v1::Event_UserAddedToGuild::internal_default_instance());
}
class Event::_Internal {
 public:
  static const ::protocol::sync::v1::Event_UserRemovedFromGuild& user_removed_from_guild(const Event* msg);
  static const ::protocol::sync::v1::Event_UserAddedToGuild& user_added_to_guild(const Event* msg);
};

const ::protocol::sync::v1::Event_UserRemovedFromGuild&
Event::_Internal::user_removed_from_guild(const Event* msg) {
  return *msg->kind_.user_removed_from_guild_;
}
const ::protocol::sync::v1::Event_UserAddedToGuild&
Event::_Internal::user_added_to_guild(const Event* msg) {
  return *msg->kind_.user_added_to_guild_;
}
void Event::set_allocated_user_removed_from_guild(::protocol::sync::v1::Event_UserRemovedFromGuild* user_removed_from_guild) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (user_removed_from_guild) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(user_removed_from_guild);
    if (message_arena != submessage_arena) {
      user_removed_from_guild = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_removed_from_guild, submessage_arena);
    }
    set_has_user_removed_from_guild();
    kind_.user_removed_from_guild_ = user_removed_from_guild;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sync.v1.Event.user_removed_from_guild)
}
void Event::set_allocated_user_added_to_guild(::protocol::sync::v1::Event_UserAddedToGuild* user_added_to_guild) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (user_added_to_guild) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(user_added_to_guild);
    if (message_arena != submessage_arena) {
      user_added_to_guild = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_added_to_guild, submessage_arena);
    }
    set_has_user_added_to_guild();
    kind_.user_added_to_guild_ = user_added_to_guild;
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sync.v1.Event.user_added_to_guild)
}
Event::Event(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protocol.sync.v1.Event)
}
Event::Event(const Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kUserRemovedFromGuild: {
      _internal_mutable_user_removed_from_guild()->::protocol::sync::v1::Event_UserRemovedFromGuild::MergeFrom(from._internal_user_removed_from_guild());
      break;
    }
    case kUserAddedToGuild: {
      _internal_mutable_user_added_to_guild()->::protocol::sync::v1::Event_UserAddedToGuild::MergeFrom(from._internal_user_added_to_guild());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protocol.sync.v1.Event)
}

void Event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Event_sync_2fv1_2fsync_2eproto.base);
  clear_has_kind();
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:protocol.sync.v1.Event)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Event::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}

void Event::ArenaDtor(void* object) {
  Event* _this = reinterpret_cast< Event* >(object);
  (void)_this;
}
void Event::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event& Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Event_sync_2fv1_2fsync_2eproto.base);
  return *internal_default_instance();
}


void Event::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:protocol.sync.v1.Event)
  switch (kind_case()) {
    case kUserRemovedFromGuild: {
      if (GetArena() == nullptr) {
        delete kind_.user_removed_from_guild_;
      }
      break;
    }
    case kUserAddedToGuild: {
      if (GetArena() == nullptr) {
        delete kind_.user_added_to_guild_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.sync.v1.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protocol.sync.v1.Event.UserRemovedFromGuild user_removed_from_guild = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_removed_from_guild(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protocol.sync.v1.Event.UserAddedToGuild user_added_to_guild = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_added_to_guild(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.sync.v1.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.sync.v1.Event.UserRemovedFromGuild user_removed_from_guild = 1;
  if (_internal_has_user_removed_from_guild()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::user_removed_from_guild(this), target, stream);
  }

  // .protocol.sync.v1.Event.UserAddedToGuild user_added_to_guild = 2;
  if (_internal_has_user_added_to_guild()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::user_added_to_guild(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.sync.v1.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.sync.v1.Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (kind_case()) {
    // .protocol.sync.v1.Event.UserRemovedFromGuild user_removed_from_guild = 1;
    case kUserRemovedFromGuild: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.user_removed_from_guild_);
      break;
    }
    // .protocol.sync.v1.Event.UserAddedToGuild user_added_to_guild = 2;
    case kUserAddedToGuild: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.user_added_to_guild_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.sync.v1.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.sync.v1.Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.sync.v1.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.sync.v1.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kUserRemovedFromGuild: {
      _internal_mutable_user_removed_from_guild()->::protocol::sync::v1::Event_UserRemovedFromGuild::MergeFrom(from._internal_user_removed_from_guild());
      break;
    }
    case kUserAddedToGuild: {
      _internal_mutable_user_added_to_guild()->::protocol::sync::v1::Event_UserAddedToGuild::MergeFrom(from._internal_user_added_to_guild());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.sync.v1.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.sync.v1.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::InternalSwap(Event* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Event::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace sync
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::sync::v1::AuthData* Arena::CreateMaybeMessage< ::protocol::sync::v1::AuthData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::sync::v1::AuthData >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::sync::v1::EventQueue* Arena::CreateMaybeMessage< ::protocol::sync::v1::EventQueue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::sync::v1::EventQueue >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::sync::v1::Event_UserRemovedFromGuild* Arena::CreateMaybeMessage< ::protocol::sync::v1::Event_UserRemovedFromGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::sync::v1::Event_UserRemovedFromGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::sync::v1::Event_UserAddedToGuild* Arena::CreateMaybeMessage< ::protocol::sync::v1::Event_UserAddedToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::sync::v1::Event_UserAddedToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::sync::v1::Event* Arena::CreateMaybeMessage< ::protocol::sync::v1::Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::sync::v1::Event >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
